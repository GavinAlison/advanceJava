MySQL逻辑架构

大体上,MySQL分为Server层和存储引擎层。
Server层包括连接器、查询缓存、分析器、优化器、执行器等。
这一层提供了一些核心公用服务,包括了内置函数、视图、触发器等功能。
存储引擎层主要是提供数据存储与提取服务,它是插件式的,支持MyISAM、InnoDB、Memory等。
MySQL5.5起,默认使用InnoDB


![MySQL逻辑架构](https://pic1.zhimg.com/v2-cfb2925cb8b221c316db1a3cf6951144_b.jpg)


查询语句的执行过程

sql语句:select * from T where ID = 1


1.连接器 
首先需要经过连接器,建立与MySQL的连接,在这里会做身份认证(验证账号密码)、
权限读取(获取你的相关权限,用于做权限的逻辑判断),而且这会有个线程池用于管理线程

2.查询缓存 
验证身份通过后,会在查询缓存中查询找有没有缓存,命中的话就直接返回结果,否则进入分析器。
查询缓存是以键值对的形式保存缓存的,key存储sql语句,value存储查询结果。

ps:建议关闭查询缓存。因为当表的更新时,相应表的查询缓存会被全部清空,这会导致缓存的命中率很低,维护查询缓存也会消耗一定的性能

3.分析器
首先进行"词法分析",从你输入的SQL中识别出"select"则认为这是查询语句,还会识别出"T"为表名,"ID"为列名等等

然后进行"语法分析",判断整个sql语句是否错误,并判断是否存在"T"表,是否存在列"ID"  

4.优化器 

在这会对SQL语句进行优化,
比如索引的选取,多表关联(join)时连接表的顺序等,然后选取最优的方案生成执行计划

ps:优化器有时也会有出错,比如选错索引

5.执行器

首先判断该用户有无对该表查询的权限,无则直接返回,有则根据执行计划执行SQL语句。 执行完成后，将结果缓存到查询缓存中,并返回结果给客户端。

